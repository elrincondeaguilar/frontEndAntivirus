name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Build project
        run: |
          npm run build

      - name: Create completely isolated static deployment
        run: |
          # Crear directorio completamente limpio
          rm -rf static-deploy
          mkdir static-deploy

          # Copiar SOLO archivos estáticos
          cp -r build/client/* static-deploy/
          cp staticwebapp.config.json static-deploy/
          cp .staticwebapp.config.json static-deploy/

          # Crear marcadores de sitio estático
          touch static-deploy/.nojekyll
          echo "<!DOCTYPE html><html><head><meta http-equiv='refresh' content='0;url=index.html'></head></html>" > static-deploy/default.htm
          echo "<?php header('Location: index.html'); ?>" > static-deploy/index.php

          # CRÍTICO: Crear un package.json VACÍO en static-deploy para confundir a Oryx
          echo '{"name":"static-site","version":"1.0.0","scripts":{},"dependencies":{}}' > static-deploy/package.json

          # Crear un .gitignore para forzar reconocimiento como sitio estático
          echo "node_modules/" > static-deploy/.gitignore
          echo "*.log" >> static-deploy/.gitignore

          # Verificar contenido
          echo "=== Static deploy contents ==="
          ls -la static-deploy/
          echo "=== Package.json content (should be minimal) ==="
          cat static-deploy/package.json

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "static-deploy"
          api_location: ""
          output_location: ""
          skip_app_build: true
          skip_api_build: true
        env:
          # Force Azure to treat as static site
          CUSTOM_BUILD_COMMAND: "echo 'Static site - no build needed'"
          PRE_BUILD_COMMAND: ""
          POST_BUILD_COMMAND: ""

      - name: Restore files after deploy
        if: always()
        run: |
          echo "Deploy completed"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          action: "close"
