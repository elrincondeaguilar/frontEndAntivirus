name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      
      # Configurar Node.js y npm
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      # Instalar todas las dependencias incluyendo Rollup
      - name: Install dependencies
        run: |
          # Limpiar instalaciones previas
          rm -rf node_modules
          rm -f package-lock.json
          
          # Instalar dependencias principales
          npm install
          
          # Instalar dependencias específicas de Rollup
          npm install @rollup/rollup-linux-x64-gnu@3.29.4 --save-dev --legacy-peer-deps
          npm install rollup@3.29.4 --save-dev --legacy-peer-deps
          
          # Verificar instalación
          ls node_modules/@rollup || echo "Rollup no se instaló correctamente"
      
      - name: Install OIDC Client
        run: npm install @actions/core@1.6.0 @actions/http-client
      
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "public"
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
