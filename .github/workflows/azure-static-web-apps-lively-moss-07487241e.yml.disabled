<<<<<<< HEAD:.github/workflows/azure-static-web-apps-lively-moss-07487241e.yml.disabled
name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Build project
        run: |
          npm run build

      - name: Create completely isolated static deployment
        run: |
          # Crear directorio completamente limpio
          rm -rf static-deploy
          mkdir static-deploy

          # Copiar SOLO archivos estáticos
          cp -r build/client/* static-deploy/
          cp staticwebapp.config.json static-deploy/

          # Crear marcadores de sitio estático
          touch static-deploy/.nojekyll
          echo "<!DOCTYPE html><html><head><meta http-equiv='refresh' content='0;url=index.html'></head></html>" > static-deploy/default.htm

          # NO crear package.json - Azure lo detecta y fuerza Oryx
          # En su lugar, crear un index.txt para indicar que es contenido estático
          echo "Static website content" > static-deploy/index.txt

          # Verificar que NO hay rastros de Node.js
          echo "=== Verificando directorio 100% estático ==="
          ls -la static-deploy/
          echo "=== Verificar que NO hay package.json ==="
          test -f static-deploy/package.json && echo "❌ PROBLEMA: package.json encontrado" || echo "✅ No package.json - Azure debería detectar como estático"
          test -f static-deploy/index.html && echo "✅ index.html exists" || echo "❌ index.html missing"

      - name: Hide Node.js files from Azure detection
        run: |
          # Mover archivos Node.js temporalmente para que Azure no los detecte
          mv package.json package.json.hidden
          mv package-lock.json package-lock.json.hidden 2>/dev/null || true
          mv node_modules node_modules.hidden 2>/dev/null || true
          mv tsconfig.json tsconfig.json.hidden 2>/dev/null || true
          mv vite.config.ts vite.config.ts.hidden 2>/dev/null || true
          
          echo "=== Root directory during deployment (should be clean) ==="
          ls -la . | head -20

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "static-deploy"
          api_location: ""
          output_location: "."
          skip_app_build: true
          skip_api_build: true
        env:
          # Force Azure to treat as static site - CRITICAL SETTINGS
          ORYX_DISABLE_BUILD: "true"
          CUSTOM_BUILD_COMMAND: "echo 'Pre-built static site'"
          PRE_BUILD_COMMAND: "echo 'No pre-build needed'"
          POST_BUILD_COMMAND: "echo 'No post-build needed'"
          APP_LOCATION: "static-deploy"
          OUTPUT_LOCATION: "."

      - name: Restore files after deploy
        if: always()
        run: |
          # Restaurar archivos Node.js originales
          mv package.json.hidden package.json 2>/dev/null || true
          mv package-lock.json.hidden package-lock.json 2>/dev/null || true
          mv node_modules.hidden node_modules 2>/dev/null || true
          mv tsconfig.json.hidden tsconfig.json 2>/dev/null || true
          mv vite.config.ts.hidden vite.config.ts 2>/dev/null || true
          echo "✅ Files restored after deployment"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          action: "close"
=======
name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Build project
        run: |
          npm run build

      - name: Create completely isolated static deployment
        run: |
          # Crear directorio completamente limpio
          rm -rf static-deploy
          mkdir static-deploy

          # Copiar SOLO archivos estáticos
          cp -r build/client/* static-deploy/
          cp staticwebapp.config.json static-deploy/

          # Crear marcadores de sitio estático
          touch static-deploy/.nojekyll
          echo "<!DOCTYPE html><html><head><meta http-equiv='refresh' content='0;url=index.html'></head></html>" > static-deploy/default.htm

          # NO crear package.json - Azure lo detecta y fuerza Oryx
          # En su lugar, crear un index.txt para indicar que es contenido estático
          echo "Static website content" > static-deploy/index.txt

          # Verificar que NO hay rastros de Node.js
          echo "=== Verificando directorio 100% estático ==="
          ls -la static-deploy/
          echo "=== Verificar que NO hay package.json ==="
          test -f static-deploy/package.json && echo "❌ PROBLEMA: package.json encontrado" || echo "✅ No package.json - Azure debería detectar como estático"
          test -f static-deploy/index.html && echo "✅ index.html exists" || echo "❌ index.html missing"

      - name: Hide Node.js files from Azure detection
        run: |
          # Mover archivos Node.js temporalmente para que Azure no los detecte
          mv package.json package.json.hidden
          mv package-lock.json package-lock.json.hidden 2>/dev/null || true
          mv node_modules node_modules.hidden 2>/dev/null || true
          mv tsconfig.json tsconfig.json.hidden 2>/dev/null || true
          mv vite.config.ts vite.config.ts.hidden 2>/dev/null || true
          
          echo "=== Root directory during deployment (should be clean) ==="
          ls -la . | head -20

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "static-deploy"
          api_location: ""
          output_location: "."
          skip_app_build: true
          skip_api_build: true
        env:
          # Force Azure to treat as static site - CRITICAL SETTINGS
          ORYX_DISABLE_BUILD: "true"
          CUSTOM_BUILD_COMMAND: "echo 'Pre-built static site'"
          PRE_BUILD_COMMAND: "echo 'No pre-build needed'"
          POST_BUILD_COMMAND: "echo 'No post-build needed'"
          APP_LOCATION: "static-deploy"
          OUTPUT_LOCATION: "."

      - name: Restore files after deploy
        if: always()
        run: |
          # Restaurar archivos Node.js originales
          mv package.json.hidden package.json 2>/dev/null || true
          mv package-lock.json.hidden package-lock.json 2>/dev/null || true
          mv node_modules.hidden node_modules 2>/dev/null || true
          mv tsconfig.json.hidden tsconfig.json 2>/dev/null || true
          mv vite.config.ts.hidden vite.config.ts 2>/dev/null || true
          echo "✅ Files restored after deployment"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_POLITE_OCEAN_07D3E3A1E }}
          action: "close"
>>>>>>> a1220de98e76712b06245225c74f78450e2f2341:.github/workflows/azure-static-web-apps-lively-moss-07487241e.yml
