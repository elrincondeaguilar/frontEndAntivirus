name: Azure Static Web Apps CI/CD - Alternative Deploy

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master
  workflow_dispatch:

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Build project
        run: |
          npm run build

      - name: Create ultra-clean static deployment
        run: |
          # STEP 1: Hide ALL Node.js files from root to prevent Azure detection
          echo "=== Hiding Node.js files from Azure detection ==="
          mv package.json package.json.HIDDEN
          mv package-lock.json package-lock.json.HIDDEN 2>/dev/null || true
          mv node_modules node_modules.HIDDEN 2>/dev/null || true
          mv tsconfig.json tsconfig.json.HIDDEN 2>/dev/null || true
          mv vite.config.ts vite.config.ts.HIDDEN 2>/dev/null || true
          mv tailwind.config.ts tailwind.config.ts.HIDDEN 2>/dev/null || true
          mv postcss.config.js postcss.config.js.HIDDEN 2>/dev/null || true

          # STEP 2: Crear directorio completamente aislado
          rm -rf pure-static
          mkdir pure-static

          # STEP 3: Copiar SOLO archivos estáticos compilados
          cp -r build/client/* pure-static/

          # STEP 4: Copiar configuración de rutas SPA
          cp staticwebapp.config.json pure-static/

          # STEP 5: Crear indicadores de sitio estático puro
          touch pure-static/.nojekyll
          echo "static" > pure-static/.static

          # STEP 6: Verificar que el root NO tiene Node.js files
          echo "=== ROOT DIRECTORY (should be clean of Node.js) ==="
          ls -la . | grep -E "(package|node_modules|tsconfig|vite|tailwind)" || echo "✅ No Node.js files visible to Azure"

          # STEP 7: Verificar contenido final
          echo "=== Pure static deployment contents ==="
          ls -la pure-static/
          test -f pure-static/index.html && echo "✅ index.html exists" || echo "❌ index.html missing"

      - name: Deploy to Azure Static Web Apps (Pure Static)
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "pure-static"
          api_location: ""
          output_location: ""
          skip_app_build: true
          skip_api_build: true
        env:
          # CRITICAL: Force Azure to NOT use Oryx
          ORYX_DISABLE_NODE_BUILD: "true"
          ORYX_DISABLE_DOTNET_CORE_BUILD: "true"
          DISABLE_ORYX: "true"
          CUSTOM_BUILD_COMMAND: "echo 'Static site - no build'"
          PRE_BUILD_COMMAND: "echo 'Skip pre-build'"
          POST_BUILD_COMMAND: "echo 'Skip post-build'"

      - name: Restore hidden files
        if: always()
        run: |
          # Restore all hidden Node.js files
          mv package.json.HIDDEN package.json 2>/dev/null || true
          mv package-lock.json.HIDDEN package-lock.json 2>/dev/null || true
          mv node_modules.HIDDEN node_modules 2>/dev/null || true
          mv tsconfig.json.HIDDEN tsconfig.json 2>/dev/null || true
          mv vite.config.ts.HIDDEN vite.config.ts 2>/dev/null || true
          mv tailwind.config.ts.HIDDEN tailwind.config.ts 2>/dev/null || true
          mv postcss.config.js.HIDDEN postcss.config.js 2>/dev/null || true
          echo "✅ All files restored"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_MOSS_07487241E }}
          action: "close"
